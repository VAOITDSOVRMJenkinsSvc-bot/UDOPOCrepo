using CRM007.CRM.SDK.Core;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using Microsoft.Crm.Sdk.Messages;
using System;
using System.Collections.Generic;
using VRM.Integration.Servicebus.Core;
using VRM.Integration.UDO.Appeals.Messages;
using VRM.Integration.Servicebus.Logging.CRM.Util;
 using Logger = VRM.Integration.Servicebus.Core.Logger;
using VIMT.AppealService.Messages;
	/// <summary>
	/// VIMT LOB Component for UDOcreateUDOAppealIssues,createUDOAppealIssues method, Processor.
	/// Code Generated by IMS on: 7/10/2015 11:20:18 AM
	/// Version: 2015.06.02
	/// </summary>
	/// <param name=none></param>
	/// <returns>none</returns>
namespace VRM.Integration.UDO.Appeals.Processors
{
	class createUDOAppealIssuesProcessor 
	{
		public IMessageBase Execute(UDOcreateUDOAppealIssuesRequest request)
		{
			//var request = message as createUDOAppealIssuesRequest;
			UDOcreateUDOAppealIssuesResponse response = new UDOcreateUDOAppealIssuesResponse();
			var progressString = "Top of Processor";

			if (request == null)
			{
				response.ExceptionMessage = "Called with no message";
				response.ExceptionOccured = true;
				return response;
			}

			Logger.Instance.Info(string.Format("Message Id:{0}, Type={2}, Recieved diagnostics message: {1}",
			request.MessageId,
			request.MessageId,
			GetType().FullName));

			try
			{
				// prefix = gtaplgetAppealRequest();
				var getAppealRequest = new  VIMTgtaplgetAppealRequest();
				getAppealRequest.LogTiming = request.LogTiming;
				getAppealRequest.LogSoap = request.LogSoap;
				getAppealRequest.Debug = request.Debug;
				getAppealRequest.RelatedParentEntityName = request.RelatedParentEntityName;
				getAppealRequest.RelatedParentFieldName = request.RelatedParentFieldName;
				getAppealRequest.RelatedParentId = request.RelatedParentId;
				getAppealRequest.UserId = request.UserId;
				getAppealRequest.OrganizationName = request.OrganizationName;
				
				 //non standard fields
				
				var getAppealResponse = getAppealRequest.SendReceive<VIMTgtaplgetAppealResponse>(MessageProcessType.Local);
				progressString = "After VIMT EC Call";
				
				response.ExceptionMessage =getAppealResponse.ExceptionMessage;
				response.ExceptionOccured = getAppealResponse.ExceptionOccured;
				if (getAppealResponse.VIMTgtaplAppealRecord1Info.VIMTgtaplAppealRecordInfo.VIMTgtaplIssueInfo!=null) {
					var Issue = getAppealResponse.VIMTgtaplAppealRecord1Info.VIMTgtaplAppealRecordInfo.VIMTgtaplIssueInfo;
					System.Collections.Generic.List<UDOcreateUDOAppealIssuesMultipleResponse> UDOcreateUDOAppealIssuesArray = new System.Collections.Generic.List<UDOcreateUDOAppealIssuesMultipleResponse>();
					foreach (var IssueItem in Issue)
					{
							response.UDOcreateUDOAppealIssuesInfo.udo_SequenceNumber= IssueItem.mcs_IssueSequenceNumber;
						if (IssueItem.mcs_IssueProgramDescription!=string.Empty)
						{
							response.UDOcreateUDOAppealIssuesInfo.udo_ProgramDescription= IssueItem.mcs_IssueProgramDescription;
						}
						if (IssueItem.mcs_IssueLevel3Description!=string.Empty)
						{
							response.UDOcreateUDOAppealIssuesInfo.udo_Level3Description= IssueItem.mcs_IssueLevel3Description;
						}
						if (IssueItem.mcs_IssueLevel2Description!=string.Empty)
						{
							response.UDOcreateUDOAppealIssuesInfo.udo_Level2= IssueItem.mcs_IssueLevel2Description;
						}
						if (IssueItem.mcs_IssueLevel1Description!=string.Empty)
						{
							response.UDOcreateUDOAppealIssuesInfo.udo_Level1Description= IssueItem.mcs_IssueLevel1Description;
						}
						if (IssueItem.mcs_IssueDescription!=string.Empty)
						{
							response.UDOcreateUDOAppealIssuesInfo.udo_IssueDescription= IssueItem.mcs_IssueDescription;
						}
						if (IssueItem.mcs_IssueCodeDescription!=string.Empty)
						{
							response.UDOcreateUDOAppealIssuesInfo.udo_IssueCodeDescription= IssueItem.mcs_IssueCodeDescription;
						}
						if (IssueItem.mcs_IssueDispositionDescription!=string.Empty)
						{
							response.UDOcreateUDOAppealIssuesInfo.udo_DispositionDescription= IssueItem.mcs_IssueDispositionDescription;
						}
						if (IssueItem.mcs_IssueDispositionDate!=System.DateTime.MinValue)
						{
							response.UDOcreateUDOAppealIssuesInfo.udo_DispositionDate= IssueItem.mcs_IssueDispositionDate;
						}
						UDOcreateUDOAppealIssuesArray.Add(responseIds);
					}
					response.UDOcreateUDOAppealIssuesInfo =UDOcreateUDOAppealIssuesArray.ToArray();
					}
                return response;
					}
			
			catch (Exception connectException)
			 {
				LogHelper.LogError(request.OrganizationName, "mcs_udoclaim", request.UserId, "UDOcreateUDOAppealIssuesProcessor Processor, Progess:" + progressString, connectException);
				response.ExceptionMessage = "Failed to get CRMConnection";
				response.ExceptionOccured = true;
				return response;
			}
		}
	}
}